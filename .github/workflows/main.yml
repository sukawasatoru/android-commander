name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build-android-commander-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: make -C server
      - uses: actions/upload-artifact@v4
        with:
          name: android-commander-server
          path: server/app/build/outputs/android-commander-server
          if-no-files-found: error
  build:
    needs:
      - build-android-commander-server
    strategy:
      max-parallel: 3
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    # https://github.com/actions/virtual-environments#available-environments
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: android-commander-server
          path: server/app/build/outputs
      - run: make -C client prepare
      - run: make -C client
      - run: make -C client lint
      - run: make -C client test
      - if: ${{ matrix.os == 'macos-latest' }}
        name: Create .app
        run: |
          mkdir -p client/target/release/app/AndroidCommander.app/Contents/MacOS
          cp client/target/release/android-commander client/target/release/app/AndroidCommander.app/Contents/MacOS
          cp client/assets/Info.plist client/target/release/app/AndroidCommander.app/Contents
      - if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: android-commander-windows
          path: client/target/release/android-commander.exe
          if-no-files-found: error
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: android-commander-linux
          path: client/target/release/android-commander
          if-no-files-found: error
      - if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: android-commander-macos
          path: client/target/release/app
          if-no-files-found: error
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: make -C client prepare fmt
