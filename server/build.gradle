buildscript {
    repositories {
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
    }
}

plugins {
    id 'com.diffplug.spotless' version '6.16.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

def setupAndroidPlugin = { project ->
    project.android {
        compileSdk 31
        buildToolsVersion '31.0.0'

        defaultConfig {
            minSdk 24
            targetSdk 31
        }

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
    }

    project.dependencies {
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    }
}

def setupKotlinAndroidPlugin = { project ->
    project.android {
        sourceSets.each {
            it.java.srcDirs += "src/${it.name}/kotlin"
        }

        kotlinOptions {
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            jvmTarget = JavaVersion.VERSION_11
        }
    }
}

def setupSpotlessPlugin = { Project project ->
    project.spotless {
        kotlin {
            target project.fileTree(dir: 'src', include: '**/*.kt', exclude: ['test/**/*.kt', 'androidTest/**/*.kt'])
            ktlint('0.43.0').userData([
                android: 'true',
                max_line_length: '120',
            ])
        }
    }
}

subprojects {
    project.plugins.whenPluginAdded {
        switch (it.class.name) {
            case 'com.android.build.gradle.AppPlugin':
            case 'com.android.build.gradle.LibraryPlugin':
                setupAndroidPlugin(project)
                break
            case 'org.jetbrains.kotlin.gradle.plugin.KotlinAndroidPluginWrapper':
                setupKotlinAndroidPlugin(project)
                break
            case 'com.diffplug.gradle.spotless.SpotlessPlugin':
                setupSpotlessPlugin(project)
                break
            default:
                break
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
